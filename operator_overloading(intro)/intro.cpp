#include<iostream>
/*class Point
{
public:
	int x;
	int y;
};
int main()
{
	int a{a};
	int b{ 5 };

	double c{ 4.5 };
	double d{ 3.7 };

	std::cout << a + b;   //~~~ std::cout<<operator+(4,5)
	std::cout << c + d;   //~~~ std::cout<<operator+(4.5,3.7)

	Point a{ 4,5 };
	Point b{ 3,5 };

	//Point c{ a + b };  // ERROR
	//std::cout << a;    // ERROR
	//bool res = a > b;  // ERROR
	//bool res = a > 5;  // ERROR

	return 0;
}*/

// === Ограничения 

// 1. Операторы которые нельзя перегружать 
// :? 
// sizeof
// ::
//.
// ?????

 //2. Можно перегружать только существующие операторы 

//3. Как минимум один операндов должен быть пользовательсткого типа 
//      нельяз перегрузить operator+(int, int)

//4. Количество операндов менять нельзя 

//5. Все операторы сохранятют приоритет и ассоциативность 

// === Особенности 
//1. Типы операторов 
//           унарные  -a  ++a  a++  +a ....
//           бинарные  a+b a%b a*b ....
//           тернарный (перегружать нельзя) a?b:c

// 2. Варианты локализации перегрузки 
//        метод класса(только так : = []  () ->)
//        функция (возможно, дружественная) (только так : <<)
// 2.1 Рекаомендации:
//    + унарные операторы --- через метод класса 
//    + бинарные операторы:
//              + если меняется левый операнд --- метод класса 
//              + если не меняется левый операнд --- функцию 

//3. Тип возврата ЛЮБОЙ!




